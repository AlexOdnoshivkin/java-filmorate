CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(255) NOT NULL,
    login varchar(255),
    email varchar(255),
    birthday date
    );

CREATE TABLE IF NOT EXISTS friends (
    req_user_id INTEGER REFERENCES users(user_id) ON DELETE CASCADE,
    resp_user_id INTEGER REFERENCES users(user_id) ON DELETE CASCADE,
    is_friend boolean DEFAULT 0,
    PRIMARY KEY (req_user_id, resp_user_id)
    );

CREATE TABLE IF NOT EXISTS genre (
    genre_id integer PRIMARY KEY,
    name varchar(255) NOT NULL
    );

CREATE TABLE IF NOT EXISTS mpa (
    mpa_id integer PRIMARY KEY,
    name varchar(255) NOT NULL
    );

CREATE TABLE IF NOT EXISTS films (
    film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar (255) NOT NULL,
    description varchar (199),
    release_date date,
    duration integer,
    mpa_id integer REFERENCES mpa(mpa_id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS likes (
    film_id integer REFERENCES films(film_id) ON DELETE CASCADE,
    user_id integer REFERENCES users(user_id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS films_genre (
    film_id integer REFERENCES films(film_id) ON DELETE CASCADE,
    genre_id integer REFERENCES genre(genre_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, genre_id)
);


